#: import NoTransition kivy.uix.screenmanager.NoTransition
#: import SlideTransition kivy.uix.screenmanager.SlideTransition


# RecycleView custom widget
# this declares the "buttons" inside the recycle view list, e.g. the list of recipes in
# the Homescreen
<RV>:
    manager: None
    controller: None
    viewclass: 'SelectableLabel'
    SelectableRecycleBoxLayout:
        default_size: None, dp(56)
        #This can be used to center the text in the available space
        #default_size_hint: 1, None
        size_hint_y: None
        height: self.minimum_height
        orientation: 'vertical'

# The guts of each button in the RV
<SelectableLabel>:
    # Draw a background to indicate selection
    canvas.before:
        Color:
            rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 1)
        Rectangle:
            pos: self.pos
            size: self.size


<RecycleViewRow>:
    orientation: 'horizontal'
    Button:
        text: root.text
        on_press: root.go_to_rec(root.text)

<CategoryLabel>
    text_size: self.size
    valign: "middle"
    padding_x: 5

<CategoryInput>
    text_size: self.size
    valign: "middle"
    multiline: "false"
    font_size: 13

<SidebarButton>
    size_hint: None, None
    size: 70, 40

<HomeScreen>
    rv: rec_rv
    BoxLayout:
        padding: 10

        FloatLayout:
            id: "home_float"
            size_hint: None, None
            size: 1000, 500
            pos_hint: {"x": 0, "top": 1}

            # Back button, switches to last screen visited
            Button:
                text: "<"
                font_size: "25sp"
                size_hint: None, None
                size: 40, 40
                pos_hint: { "x": 0, "top": 1}
                on_press:
                    #root.manager.current = root.manager.last
                    root.go_home()

            # Forward button, should go to "previous screen" if the back button is used
            # Currently implemented like back button FIXME
            Button:
                text: "Home"
                #font_size: "25sp"
                size_hint: None, None
                size: 50, 40
                pos_hint: { "x": .04, "top": 1}
                on_press:
                    root.manager.transition = NoTransition()
                    root.manager.current = "home"

            # Button to open an empty, editable recipe page
            Button:
                text: "New Recipe"
                size_hint: None, None
                size: 100, 40
                pos_hint: { "x": .09, "top": 1}
                on_press:
                    root.manager.transition = NoTransition()
                    root.new_recipe()

            # Search bar, created but not linked up to any search function FIXME
            TextInput:
                hint_text: "Search"
                multiline: "false"
                size_hint: None, None
                size: 450, 30
                pos_hint: {"x": .2, "top": .99}

            # Search button, should search database for recipe entered in search bar
            # currently fills the recipe screen? dont think it actually does anything FIXME
            Button:
                text: "Search"
                size_hint: None, None
                size: 90, 40
                pos_hint: {"x": .655, "top": 1}
                on_press: root.rv.update

            # Grey box for categories and dropdowns to go into
            BoxLayout:
                orientation: "vertical"
                size_hint: None, None
                size: 189, 400
                pos_hint: {"x": 0, "top": .9}

                canvas:
                    Color:
                        rgba: 150/255, 150/255, 150/255, 1
                    Rectangle:
                        pos: self.pos
                        size: self.size

            # Category trees to go in grey box FIXME
            # Should autofill from database with column names

            SidebarButton:
                text: "Home"
                pos_hint: {"x": 0, "top": .88}
                on_press:
                    root.rv.update_rec("","")
                    Title.text = "All Recipes"

            SidebarButton:
                text: "Category"
                pos_hint: {"x": 0, "top": .8}
                on_press: root.show_category(self.text)

            SidebarButton:
                text: "Meal"
                pos_hint: {"x": 0, "top": .72}
                on_press: root.show_category(self.text)

            SidebarButton:
                text: "Ethnicity"
                pos_hint: {"x": 0, "top": .64}
                on_press: root.show_category(self.text)

            SidebarButton:
                text: "Difficulty"
                pos_hint: {"x": 0, "top": .56}
                on_press: root.show_category(self.text)

            SidebarButton:
                text: "Price"
                pos_hint: {"x": 0, "top": .48}
                on_press: root.show_category(self.text)

            SidebarButton:
                text: "Prep Time"
                pos_hint: {"x": 0, "top": .40}
                on_press: root.show_category(self.text)


            # Title label
            Label:
                id: Title
                text: "All Recipes"
                font_size: 34
                size_hint: None, None
                size: self.texture_size
                pos_hint: {"x": .23, "top": .89}

            # RecycleView list of recipes
            # uses custom widget declared outside the Home Screen
            RV:
                id: rec_rv
                pos_hint: {"x": .25, "top": .78}
                manager: root.manager
                controller: root.controller
                data: app.gen_rv_recs()



<RecipeViewScreen>
    BoxLayout:
        padding: 10

        # Scroll View to make the screen scrollable, i dont think it works FIXME
        ScrollView:
            id: recipe_screen_scrlv
            do_scroll_x: False
            size: self.size

            # Frame for the entire page, maybe worth pushing this up to top
            FloatLayout:
                size_hint: None, None
                size: 1000, 500
                pos_hint: {"x": 0, "top": 1}

                # Back button, brings you back to the last screen you were at
                Button:
                    text: "<"
                    font_size: 25
                    size_hint: None, None
                    size: 40, 40
                    pos_hint: { "x": 0, "top": 1}
                    on_press:
                        root.manager.current = root.manager.previous()

                # Edit recipe button, to switch from view screen to an editable screen
                Button:
                    text: "Edit Recipe"
                    size_hint: None, None
                    size: 100, 40
                    pos_hint: { "x": .047, "top": 1}
                    on_press: root.edit_recipe()

                # Simple Recipe Title label
                Label:
                    id: name
                    text: "Recipe Name"
                    font_size: 33
                    size_hint: None, None
                    size: self.texture_size
                    pos_hint: {"x": .16, "top": 1}

                # button that is placeholder for a picture of the food, uploaded by user
                Button:
                    id: picture
                    text: "Recipe Picture"
                    size_hint: None, None
                    size: 125, 125
                    pos_hint: { "x": .01, "top": .9}

                # Grey box with categories in it
                BoxLayout:
                    orientation: "vertical"
                    pos_hint: {"x": .16, "top": .9}
                    size_hint: None, None
                    size: 200, 125
                    padding: 5
                    spacing: 2
                    size_hint_x: .5
                    canvas:
                        Color:
                            rgba: 150/255, 150/255, 150/255, 1
                        Rectangle:
                            pos: self.pos
                            size: self.size

                    # Placeholding label with hardcoded categories
                    # This would be replaced by autogenerated fields from the columns of DB
                    CategoryLabel:
                        id: category
                        text: "Category: "

                    CategoryLabel:
                        id: meal
                        text: "Meal: "

                    CategoryLabel:
                        id: ethnicity
                        text: "Ethnicity: "

                    CategoryLabel:
                        id: difficulty
                        text: "Difficulty: "

                    CategoryLabel:
                        id: price
                        text: "Price: "

                    CategoryLabel:
                        id: prep
                        text: "Prep Time: "

                # Title label for ingredients section
                Label:
                    text: "[b]Ingredients[/b]"
                    markup: True
                    font_size: 21
                    size_hint: None, None
                    size: self.texture_size
                    pos_hint: {"x": .02, "top": .6}

                # Hardcoded ingredients section for recipe, this would be automatically generated
                Label:
                    id: ingredients
                    text: "Example ingredients"
                    size_hint: None, None
                    size: self.texture_size
                    pos_hint: {"x": .01, "top": .53}

                # Title label for instructions section
                Label:
                    text: "[b]Instructions[/b]"
                    markup: True
                    font_size: 21
                    size_hint: None, None
                    size: self.texture_size
                    pos_hint: {"x": .36, "top": .6}

                # Hardcoded instructions section, this would be automatically generated
                Label:
                    id: instructions
                    text: "Example Instructions"
                    text_size: 400, None
                    size_hint: None, None
                    size: self.texture_size
                    pos_hint: {"x": .35, "top": .53}


<EditRecipeScreen>
    BoxLayout:
        padding: 10

        # Scroll View to make the screen scrollable, i dont think it works FIXME
        ScrollView:
            id: recipe_screen_scrlv
            do_scroll_x: False
            size: self.size

            # Frame for the entire page, maybe worth pushing this up to top
            FloatLayout:
                size_hint: None, None
                size: 1000, 500
                pos_hint: {"x": 0, "top": 1}

                # Back button, brings you back to the last screen you were at
                Button:
                    text: "<"
                    font_size: 25
                    size_hint: None, None
                    size: 40, 40
                    pos_hint: { "x": 0, "top": 1}
                    on_press:
                        root.manager.current = root.manager.previous()

                # Edit recipe button, to switch from view screen to an editable screen
                Button:
                    text: "Save Recipe"
                    size_hint: None, None
                    size: 100, 40
                    pos_hint: { "x": .047, "top": 1}
                    on_press: root.save_recipe()

                # Input the recipe title
                TextInput:
                    id: name
                    hint_text: "Recipe Name"
                    text: ""
                    multiline: "false"
                    size_hint: None, None
                    size: 500, 40
                    pos_hint: {"x": .16, "top": 1}

                Button:
                    text: "Delete\nRecipe"
                    size_hint: None, None
                    size: 73, 60
                    pos_hint: {"x": .67, "top": 1}
                    on_press: root.delete_recipe()


                # button that is placeholder for a picture of the food, uploaded by user
                Button:
                    id: picture
                    text: "Recipe Picture"
                    size_hint: None, None
                    size: 125, 125
                    pos_hint: { "x": .01, "top": .9}

                # Grey box with categories in it
                BoxLayout:
                    orientation: "vertical"
                    pos_hint: {"x": .16, "top": .9}
                    size_hint: None, None
                    size: 200, 170
                    size_hint_x: .5

                    # Placeholding label with hardcoded categories
                    # This would be replaced by autogenerated fields from the columns of DB
                    CategoryInput:
                        id: category
                        text: "Category: "

                    CategoryInput:
                        id: meal
                        text: "Meal: "

                    CategoryInput:
                        id: ethnicity
                        text: "Ethnicity: "

                    CategoryInput:
                        id: difficulty
                        text: "Difficulty: "

                    CategoryInput:
                        id: price
                        text: "Price: "

                    CategoryInput:
                        id: prep
                        text: "Prep Time: "

                # Title label for ingredients section
                Label:
                    text: "[b]Ingredients[/b]"
                    markup: True
                    font_size: 21
                    size_hint: None, None
                    size: self.texture_size
                    pos_hint: {"x": .02, "top": .52}

                # Hardcoded ingredients section for recipe, this would be automatically generated
                TextInput:
                    id: ingredients
                    hint_text: "ex: \n- 2 cups of milk\n- 1 stick of butter"
                    text: ""
                    size_hint: None, None
                    size: 320, 400
                    pos_hint: {"x": .01, "top": .45}

                # Title label for instructions section
                Label:
                    text: "[b]Instructions[/b]"
                    markup: True
                    font_size: 21
                    size_hint: None, None
                    size: self.texture_size
                    pos_hint: {"x": .36, "top": .52}

                # Hardcoded instructions section, this would be automatically generated
                TextInput:
                    id: instructions
                    hint_text: "ex:\n1) Boil Water\n2) Let it cool"
                    text: ""
                    size_hint: None, None
                    size: 350, 800
                    pos_hint: {"x": .35, "top": .45}
